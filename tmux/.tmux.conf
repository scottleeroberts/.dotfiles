###configuration
# use 256 term for pretty colors
set -g default-terminal "screen-256color"

set-option -g default-shell $SHELL

# increase scroll-back history
set -g history-limit 5000

# use vim key bindings
setw -g mode-keys vi

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# re-number windows when one is closed
set -g renumber-windows on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

###########################
#  Key Bindings
###########################

# tmux prefix
unbind C-b
set -g prefix C-@ # Acts as Ctrl-<space>

# rebind splits to open with current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

## Join windows: <prefix> s, <prefix> j
bind-key          S choose-window "join-pane -v -s "%%""
bind-key          V choose-window "join-pane -h -s "%%""
bind-key          B "break-pane"

bind-key s choose-session "move-window -t %%:"

# Use Ctrl+Shift+(Left/Right) to move windows (tabs)
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# force a reload of the config kile
unbind r
bind r source-file ~/.tmux.conf \; display 'Reloaded!'

# Enable screen-like C-a C-a moving to last window
bind-key C-a last-window

set -g mouse on

# Vim style
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
bind-key -T copy-mode-vi "y" send-keys -X copy-pipe-and-cancel "xclip -i -sel clip"

#smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys Escape '[104;5u'" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Go to beginning of line
bind a send-prefix

###########################
# Status Bar
###########################

# set refresh interval for status bar
set -g status-interval 1
set -g status-justify left


###########################
# Colors
###########################

# color status bar
set -g status-fg white

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

# set color of active pane
set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg blue
set -g pane-active-border-bg black
set -g status-bg "colour238"
set -g message-command-fg "colour249"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour117"
set -g message-bg "colour237"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour249"
set -g message-command-bg "colour237"
set -g status-attr "none"
set -g pane-border-fg "colour237"
set -g status-left-attr "none"
setw -g window-status-fg "colour117"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour238"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour117"
setw -g window-status-separator ""
setw -g window-status-bg "colour238"
set -g status-left ""
set -g status-right '%d/%m %H:%M:%S '
setw -g window-status-format "#[fg=colour249,bg=colour238] #I#[fg=colour249,bg=#434343] #W "
setw -g window-status-current-format "#[fg=colour238,bg=colour237,nobold,nounderscore,noitalics]#[fg=#8abeb7,bg=colour237] #I#[fg=#81a2be,bg=colour237] #W #[fg=colour237,bg=colour238,nobold,nounderscore,noitalics]"

